Git 간편 안내서에서 따옴
  - http://rogerdudler.github.io/git-guide/index.ko.html
  
더 진전된 Git 사용법 
  - http://nvie.com/posts/a-successful-git-branching-model/

1. git init : 새로운 저장소 만들기 
   폴더를 하나 만들고, 그 안에서 
      : git init 명령을 실행하세요.

2. git clone : 저장소 받아오기 
    로컬 저장소를 복제 하려면 
         : git clone /로컬/저장소/경로
    원격 서버의 저장소를 복제하려면 
         :git clone 사용자명@호스트:/원격/저장소/경로 

3. 작업의 흐름
   로컬 저장소에는 git 가 관리하는 세가지의 나무 (tree)로 구성되어 있어요.
   아래와 같은 작업을 수행하면 되요.  
   작업 디렉토리(working directory) -- add --> 인덱스(index)-- commit --> 헤드 (head)

4. 추가와 확정 (commit)
   변경된 파일은 아래 명령어로 (인덱스)에 추가할 수 있어요.
     :git add <파일 이름> 또는 git add *
   이것이 바로 git 기본 작업 흐롬의 첫단계에 해당돼요.
   실제 변경 내용을 확정하려면 git commit -m "이번 확정본에 대한 설명" 명령을 내려야 합니다.

5. 변경 내용 발행 (Push)하기
   현재 변경 내용은 아직 로컬 저장소의 Head 안에 머물고 있어요.
   자 이제 변경 내용을 원격 서버로 올려 봅시다.
   아래 명령을 실행하세요.
    : git push origin maser 
   다른 브랜치를 발행하려면 master를 원하는 브랜치 이름으로 바꿔주세요.

   만약에 기존에 있던 원격 저장소를 복제한 것이 아니라면,
   원격 서버의 주소를 git에게 알려 주어야 해요
    : git remote add origin <원격 서버 주소>

6. 가지 (branch) 치기
  
   가지는 안전하게 격리된 상태에서 새로운 기능을 만들고자 할때 사용해요.

   여러분이 저장소를 새로 만들면 master 가지가 만들어 집니다.
   이제 다른 가지를 이용해서 개발을 진해하고, 나중에 개발이 완료되면 
   master 가지로 돌아와 병합하면 돼요.

   ----- branch  ----------master ------------------ merge ----------
                  -------- feature x branch-------


  feature_x라는 이름의 브랜치를 만들고 갈아타려면
   : git checkout -b feature_x

  master 브랜치로 돌아오려면
   : git checkout master

  feature_x 브랜치 삭제하기
   : git branch -d feature_x

  원격 저장소에: git branch -d feature_x

  
  feature_x라는 이름의 브랜치를 만들고 갈아타려면
   : git checkout -b feature_x

  master 브랜치로 돌아오려면
   : git checkout master

  feature_x 브랜치 삭제하기
   : git branch -d feature_x

  새로운 브랜치를 원격 저장소에 보내기
 : git branch -d feature_x

  원격 저장소에: git branch -d feature_x

  
  feature_x라는 이름의 브랜치를 만들고 갈아타려면
   : git checkout -b feature_x

  master 브랜치로 돌아오려면
   : git checkout master

  feature_x 브랜치 삭제하기
  : git branch -d feature_x

  원격 저장소에 브랜치 반영하기 
  : git push origin <feature_x>

7. 갱신과 병합 (merge)
  여러분의 로컬 저장소를 원격 저장소에 맞춰 갱신하려면
  아래 명령어를 사용해요.
  : git pull

  이렇게 하면 원격 저장소의 변경 내용이 로컬 작업 디렉토리에 
  받아지고 (fetch), 병합(merge) 갱신과 병합 (merge)된답니다.

  다른 브랜치에 있는 변경 내용을 현재 브랜치에 (예 master branch)
  에 병합하려면 아래 명령을 실행하세요.

  : git merge <branch name>

8. 꼬리표 (tag) 달기
  소프트웨어의 새버전을 발표할 때마다 꼬리표를 달아 놓으면 좋아요.
  아래 명령을 실행하면 새로운 꼬리표인 1.0.0 된답니다.
  : git tag 1.0.0 1b2e1d63ff

  식별자는 아래 명령으로 얻을 수 있습니다.
  :git log

9. 로컬 변경 내용 되돌리기
   실수로 무언가 잘못을 한 경우, 로컬 변경내용을 되돌릴 수 있어요.
  :git checkout -- <file name>
 
  위 명령은 로컬의 변경 내용을 변경 전 상태 (HEAD)로 되돌려줘요.
  다만, 이미 인덱스에 추가된 변경 내용과 새로 생성한 파일은 그대로 남는답니다. 

  만약 모든 변경 내용과 확정본을 포기하려면,
  아래 명령으로 원격 저장소의 최종 이력을 가져오고,
  로컬 master branch 가 최신 이력을 가리키도록 할 수 있어요.
  : git fetch origin
  : git reset --hard origin/master 

  
